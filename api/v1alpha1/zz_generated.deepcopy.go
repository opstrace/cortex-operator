// +build !ignore_autogenerated

/**
 * Copyright 2021 Opstrace, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompactorReference) DeepCopyInto(out *CompactorReference) {
	*out = *in
	if in.Svc != nil {
		in, out := &in.Svc, &out.Svc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Sts != nil {
		in, out := &in.Sts, &out.Sts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompactorReference.
func (in *CompactorReference) DeepCopy() *CompactorReference {
	if in == nil {
		return nil
	}
	out := new(CompactorReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cortex) DeepCopyInto(out *Cortex) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cortex.
func (in *Cortex) DeepCopy() *Cortex {
	if in == nil {
		return nil
	}
	out := new(Cortex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cortex) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CortexList) DeepCopyInto(out *CortexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cortex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CortexList.
func (in *CortexList) DeepCopy() *CortexList {
	if in == nil {
		return nil
	}
	out := new(CortexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CortexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CortexSpec) DeepCopyInto(out *CortexSpec) {
	*out = *in
	if in.IngesterSpec != nil {
		in, out := &in.IngesterSpec, &out.IngesterSpec
		*out = new(StatefulSetSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.CompactorSpec != nil {
		in, out := &in.CompactorSpec, &out.CompactorSpec
		*out = new(StatefulSetSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DistributorSpec != nil {
		in, out := &in.DistributorSpec, &out.DistributorSpec
		*out = new(DeploymentSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.StoreGatewaySpec != nil {
		in, out := &in.StoreGatewaySpec, &out.StoreGatewaySpec
		*out = new(StatefulSetSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.QuerierSpec != nil {
		in, out := &in.QuerierSpec, &out.QuerierSpec
		*out = new(DeploymentSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.QueryFrontendSpec != nil {
		in, out := &in.QueryFrontendSpec, &out.QueryFrontendSpec
		*out = new(DeploymentSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CortexSpec.
func (in *CortexSpec) DeepCopy() *CortexSpec {
	if in == nil {
		return nil
	}
	out := new(CortexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CortexStatus) DeepCopyInto(out *CortexStatus) {
	*out = *in
	if in.MemcachedRef != nil {
		in, out := &in.MemcachedRef, &out.MemcachedRef
		*out = new(MemcachedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.IngesterRef != nil {
		in, out := &in.IngesterRef, &out.IngesterRef
		*out = new(IngesterReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DistributorRef != nil {
		in, out := &in.DistributorRef, &out.DistributorRef
		*out = new(DistributorReference)
		(*in).DeepCopyInto(*out)
	}
	if in.QuerierRef != nil {
		in, out := &in.QuerierRef, &out.QuerierRef
		*out = new(QuerierReference)
		(*in).DeepCopyInto(*out)
	}
	if in.QueryFrontendRef != nil {
		in, out := &in.QueryFrontendRef, &out.QueryFrontendRef
		*out = new(QueryFrontendReference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompactorRef != nil {
		in, out := &in.CompactorRef, &out.CompactorRef
		*out = new(CompactorReference)
		(*in).DeepCopyInto(*out)
	}
	if in.StoreGatewayRef != nil {
		in, out := &in.StoreGatewayRef, &out.StoreGatewayRef
		*out = new(StoreGatewayReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CortexStatus.
func (in *CortexStatus) DeepCopy() *CortexStatus {
	if in == nil {
		return nil
	}
	out := new(CortexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentSpec) DeepCopyInto(out *DeploymentSpec) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentSpec.
func (in *DeploymentSpec) DeepCopy() *DeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(DeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributorReference) DeepCopyInto(out *DistributorReference) {
	*out = *in
	if in.Svc != nil {
		in, out := &in.Svc, &out.Svc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Deploy != nil {
		in, out := &in.Deploy, &out.Deploy
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributorReference.
func (in *DistributorReference) DeepCopy() *DistributorReference {
	if in == nil {
		return nil
	}
	out := new(DistributorReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngesterReference) DeepCopyInto(out *IngesterReference) {
	*out = *in
	if in.Svc != nil {
		in, out := &in.Svc, &out.Svc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Sts != nil {
		in, out := &in.Sts, &out.Sts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngesterReference.
func (in *IngesterReference) DeepCopy() *IngesterReference {
	if in == nil {
		return nil
	}
	out := new(IngesterReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedReference) DeepCopyInto(out *MemcachedReference) {
	*out = *in
	if in.MemcachedSvc != nil {
		in, out := &in.MemcachedSvc, &out.MemcachedSvc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedSts != nil {
		in, out := &in.MemcachedSts, &out.MemcachedSts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedIndexQueriesSvc != nil {
		in, out := &in.MemcachedIndexQueriesSvc, &out.MemcachedIndexQueriesSvc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedIndexQueriesSts != nil {
		in, out := &in.MemcachedIndexQueriesSts, &out.MemcachedIndexQueriesSts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedIndexWritesSvc != nil {
		in, out := &in.MemcachedIndexWritesSvc, &out.MemcachedIndexWritesSvc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedIndexWritesSts != nil {
		in, out := &in.MemcachedIndexWritesSts, &out.MemcachedIndexWritesSts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedResultsSvc != nil {
		in, out := &in.MemcachedResultsSvc, &out.MemcachedResultsSvc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedResultsSts != nil {
		in, out := &in.MemcachedResultsSts, &out.MemcachedResultsSts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedMetadataSvc != nil {
		in, out := &in.MemcachedMetadataSvc, &out.MemcachedMetadataSvc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.MemcachedMetadataSts != nil {
		in, out := &in.MemcachedMetadataSts, &out.MemcachedMetadataSts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedReference.
func (in *MemcachedReference) DeepCopy() *MemcachedReference {
	if in == nil {
		return nil
	}
	out := new(MemcachedReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuerierReference) DeepCopyInto(out *QuerierReference) {
	*out = *in
	if in.Svc != nil {
		in, out := &in.Svc, &out.Svc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Deploy != nil {
		in, out := &in.Deploy, &out.Deploy
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuerierReference.
func (in *QuerierReference) DeepCopy() *QuerierReference {
	if in == nil {
		return nil
	}
	out := new(QuerierReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryFrontendReference) DeepCopyInto(out *QueryFrontendReference) {
	*out = *in
	if in.Svc != nil {
		in, out := &in.Svc, &out.Svc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Deploy != nil {
		in, out := &in.Deploy, &out.Deploy
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryFrontendReference.
func (in *QueryFrontendReference) DeepCopy() *QueryFrontendReference {
	if in == nil {
		return nil
	}
	out := new(QueryFrontendReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulSetSpec) DeepCopyInto(out *StatefulSetSpec) {
	*out = *in
	if in.DatadirSize != nil {
		in, out := &in.DatadirSize, &out.DatadirSize
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulSetSpec.
func (in *StatefulSetSpec) DeepCopy() *StatefulSetSpec {
	if in == nil {
		return nil
	}
	out := new(StatefulSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoreGatewayReference) DeepCopyInto(out *StoreGatewayReference) {
	*out = *in
	if in.Svc != nil {
		in, out := &in.Svc, &out.Svc
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Sts != nil {
		in, out := &in.Sts, &out.Sts
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoreGatewayReference.
func (in *StoreGatewayReference) DeepCopy() *StoreGatewayReference {
	if in == nil {
		return nil
	}
	out := new(StoreGatewayReference)
	in.DeepCopyInto(out)
	return out
}
